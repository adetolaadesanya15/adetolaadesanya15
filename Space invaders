import pygame
import random
import math
print('Successfully Installed')
from pygame import mixer


# Initialize Pygame First

pygame.init()

#Your screen Size
screen = pygame.display.set_mode((800, 600))
# 14 and 15 are loading music
mixer.music.load('background.wav')
mixer.music.play()
# 17 is loading an image
playerImg = pygame.image.load('player.png')

# 20 and 21 are making variables(container) of where the player will be
playerX = 400
playerY = 450
# 23 is a variable that can make the player move left right
playerX_change = 0
# 25 is loading the enemy image to the game.
enemyImg = pygame.image.load('enemy.png')
enemyX = random.randint(0, 800)
enemyY = random.randint(50, 150)
enemyX_change = 0.9

enemyY_change = 40

bulletImg = pygame.image.load('bullet.png')
#  34 is making a variable of where the bullet is
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 10
bullet_state = 'ready'
# 32 is loading the background it is loading an image
backgroundImg = pygame.image.load('background.png')
score_value = 0
font = pygame.font.Font('Minecraft.ttf', 40)
textX = 10
textY = 10

def thecollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY - bulletY, 2)))

    if distance < 27:
        return True
    else:
        return False
def show_score(x, y):
    score = font.render(f'Score : {str(score_value)}', True, (0, 0, 255))
    screen.blit(score, (x, y))
def player(x, y):
    screen.blit(playerImg, (playerX, playerY))
def enemy(x, y):
    screen.blit(enemyImg, (enemyX, enemyY))
def shoot_bullet(x, y):
    global bullet_state
    bullet_state = 'shoot'
    screen.blit(bulletImg, (x + 16, y + 10))

# Set screen caption and logo
pygame.display.set_caption("Michael's Space Invaders")
icon = pygame.image.load('ufo.png')

running = True

while running:
    screen.fill((0, 0, 0))
    screen.blit(backgroundImg, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change -= 5
            if event.key == pygame.K_RIGHT:
                playerX_change += 5
            if event.key == pygame.K_SPACE:
                bullet_sound = mixer.Sound('laser.wav')
                bullet_sound.play()
                shoot_bullet(playerX, bulletY)
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0
        if event.type == pygame.QUIT:
            running = False

    if bulletY <= 0:
        bulletY = 480
        bullet_state = 'ready'
    if bullet_state == 'shoot':
        shoot_bullet(playerX, bulletY)
        bulletY -= bulletY_change

    playerX += playerX_change
    if playerX <= 0:
        playerX = 0
    elif playerX >= 736:
        playerX = 736
    enemyX += enemyX_change
    if enemyX <= 0:
        enemyX_change = 0.3
        enemyY += enemyY_change
    elif enemyX >= 736:
        enemyX_change = -0.3
        enemyY += enemyY_change
    collision = thecollision(enemyX, enemyY, bulletX, bulletY)
    if collision:
        bulletY = 480
        bullet_state = "ready"
        score_value += 1
    player(playerX, playerY)
    enemy(enemyX, enemyY)
    show_score(textX, textY)

    pygame.display.update()
# We want to fill our screen
# Colors are applied in RGB( RED, GREEN, BLUE )
